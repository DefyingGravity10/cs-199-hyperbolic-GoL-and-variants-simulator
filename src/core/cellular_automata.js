// Generated by CoffeeScript 2.7.0
(function () {
  var ChainMap, evaluateTotalisticAutomaton, neighborsSum;

  ({ ChainMap } = require("./chain_map.js"));

  exports.neighborsSum = neighborsSum = function (
    cells,
    tiling,
    plus = function (x, y) {
      return x + y;
    },
    plusInitial = 0
  ) {
    var sums;
    sums = new ChainMap();
    cells.forItems(function (cell, value) {
      var i, len, neighbor, ref;
      ref = tiling.moore(cell);
      for (i = 0, len = ref.length; i < len; i++) {
        neighbor = ref[i];
        sums.putAccumulate(neighbor, value, plus, plusInitial);
      }
      //don't forget the cell itself! It must also present, with zero (initial) neighbor sum
      if (sums.get(cell) === null) {
        return sums.put(cell, plusInitial);
      }
    });
    return sums;
  };

  exports.evaluateTotalisticAutomaton = evaluateTotalisticAutomaton = function (
    cells,
    tiling,
    nextStateFunc,
    plus,
    plusInitial
  ) {
    var newCells, sums;
    newCells = new ChainMap();
    sums = neighborsSum(cells, tiling, plus, plusInitial);
    sums.forItems(function (cell, neighSum) {
      var cellState, nextState, ref;
      cellState = (ref = cells.get(cell)) != null ? ref : 0;
      nextState = nextStateFunc(cellState, neighSum);
      if (nextState !== 0) {
        return newCells.put(cell, nextState);
      }
    });
    return newCells;
  };
}).call(this);
