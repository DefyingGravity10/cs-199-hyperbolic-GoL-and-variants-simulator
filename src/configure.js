// Generated by CoffeeScript 2.7.0
(function () {
  //!/usr/bin/env coffee
  var coffee_outputs,
    coffee_sources,
    fs,
    isWin,
    joinStrings,
    js_outputs,
    js_sources,
    makeCoffeeSource,
    makeJsSource,
    makefile,
    makefile_template,
    mkdirp,
    odir,
    os,
    output_dirs,
    path,
    walkDir;

  fs = require("fs");

  path = require("path");

  os = require("os");

  mkdirp = require("mkdirp");

  isWin = !!os.platform().match(/^win/);

  walkDir = function (dir, cb) {
    var fname, i, len, ref, results, subPath;
    ref = fs.readdirSync(dir);
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      fname = ref[i];
      subPath = path.join(dir, fname);
      if (fs.lstatSync(subPath).isDirectory()) {
        results.push(walkDir(subPath, cb));
      } else {
        results.push(cb(dir, fname));
      }
    }
    return results;
  };

  js_sources = [];

  coffee_sources = [];

  js_outputs = [];

  coffee_outputs = [];

  output_dirs = {};

  makeCoffeeSource = function (dir, fname) {
    var ipath, odir, opath;
    ipath = path.join(dir, fname);
    odir = dir.replace(/^scripts-src/, "scripts");
    output_dirs[odir] = true;
    opath = path.join(odir, fname.replace(/.js$/, ".js"));
    fs.writeSync(makefile, `${opath}: ${ipath}\n`);
    fs.writeSync(makefile, `\t$(COFFEE) $(COFFEE_FLAGS) -c -o ${odir} ${ipath}\n`);
    coffee_sources.push(ipath);
    return coffee_outputs.push(opath);
  };

  makeJsSource = function (dir, fname) {
    var ipath, odir, opath;
    ipath = path.join(dir, fname);
    odir = dir.replace(/^scripts-src/, "scripts");
    opath = path.join(odir, fname);
    fs.writeSync(makefile, `${opath}: ${ipath}\n`);
    fs.writeSync(makefile, isWin ? `\tcopy /Y ${ipath} ${opath}\n` : `\tln -f ${ipath} ${opath}\n`);
    js_sources.push(ipath);
    return js_outputs.push(opath);
  };

  makefile = fs.openSync("Makefile", "w");

  makefile_template = fs.readFileSync("Makefile.in");

  fs.writeSync(makefile, "" + makefile_template);

  walkDir("scripts-src", function (d, f) {
    if (/.js$/.test(f)) {
      return makeCoffeeSource(d, f);
    } else if (/.js$/.test(f)) {
      return makeJsSource(d, f);
    }
  });

  joinStrings = function (strs) {
    return strs.join(" ");
  };

  fs.writeSync(makefile, `JS_SOURCES = ${joinStrings(js_sources)}\n`);

  fs.writeSync(makefile, `COFFEE_SOURCES = ${joinStrings(coffee_sources)}\n`);

  fs.writeSync(makefile, `JS_OUTPUTS = ${joinStrings(js_outputs)}\n`);

  fs.writeSync(makefile, `COFFEE_OUTPUTS = ${joinStrings(coffee_outputs)}\n`);

  fs.writeSync(makefile, "ALL_OUTPUTS = $(JS_OUTPUTS) $(COFFEE_OUTPUTS)\n");

  fs.writeSync(makefile, "everything: $(ALL_OUTPUTS)\n");

  fs.closeSync(makefile);

  //Create the complete output directory structure.
  for (odir in output_dirs) {
    mkdirp(odir);
  }
}).call(this);
