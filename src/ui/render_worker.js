// Generated by CoffeeScript 2.7.0
(function () {
  //The purpose of this worker is to render bezier curves positions for Poincare tessellation.

  var ContextDelegate, M, Tessellation, cellMatrices, initialize, render, tessellation;

  ({ ContextDelegate } = require("./context_delegate.js"));

  ({ Tessellation } = require("../core/hyperbolic_tessellation.js"));

  M = require("../core/matrix3.js");

  cellMatrices = null;

  tessellation = null;

  initialize = function (n, m, newCellMatrices) {
    tessellation = new Tessellation(n, m);
    return (cellMatrices = newCellMatrices);
  };

  render = function (viewMatrix) {
    var context, i, len, m, results;
    context = new ContextDelegate();
    results = [];
    for (i = 0, len = cellMatrices.length; i < len; i++) {
      m = cellMatrices[i];
      tessellation.makeCellShapePoincare(M.mul(viewMatrix, m), context);
      results.push(context.take());
    }
    return results;
  };

  self.onmessage = function (e) {
    var id, m, matrices, n, shapes;
    switch (e.data[0]) {
      case "I":
        [n, m, matrices] = e.data[1];
        console.log(`Init tessellation {${n};${m}}`);
        initialize(n, m, matrices);
        postMessage(["I", [n, m]]);
        shapes = render(M.eye());
        return postMessage(["R", shapes, 0]);
      case "R":
        id = e.data[2];
        shapes = render(e.data[1]);
        return postMessage(["R", shapes, id]);
      default:
        return console.log(`Unknown message: ${JSON.stringify(e.data)}`);
    }
  };
}).call(this);
