// Generated by CoffeeScript 2.7.0
(function() {
  var assert, lzw_decode, lzw_encode;

  ({lzw_encode, lzw_decode} = require("../src/ext/lzw.coffee"));

  assert = require("assert");

  describe("lzw_encode", function() {
    var strings;
    strings = ["", "a", "bbbbbbbbbabababbabab", "hello hello hello hello this is me"];
    it("should encode without error some strings", function() {
      var c1, c2, codes, i, j, k, l, len, len1, s;
      codes = (function() {
        var k, len, results;
        results = [];
        for (k = 0, len = strings.length; k < len; k++) {
          s = strings[k];
          results.push(lzw_encode(s));
        }
        return results;
      })();
      for (i = k = 0, len = codes.length; k < len; i = ++k) {
        c1 = codes[i];
        for (j = l = 0, len1 = codes.length; l < len1; j = ++l) {
          c2 = codes[j];
          if (i !== j) {
            assert(c1 !== c2, `Code for ${strings[i]} isnt ${strings[j]}`);
          }
        }
      }
    });
    return it("should decode. giving same result", function() {
      var code, k, len, results, s, s1;
      results = [];
      for (k = 0, len = strings.length; k < len; k++) {
        s = strings[k];
        code = lzw_encode(s);
        s1 = lzw_decode(code);
        results.push(assert.equal(s1, s));
      }
      return results;
    });
  });

}).call(this);
