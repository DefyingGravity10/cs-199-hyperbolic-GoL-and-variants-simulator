// Generated by CoffeeScript 2.7.0
(function() {
  var RegularTiling, assert, visiblePolygonSize;

  assert = require("assert");

  ({RegularTiling} = require("../src/core/regular_tiling.coffee"));

  //{unity} = require "../src/core/vondyck_chain.coffee"
  ({visiblePolygonSize} = require("../src/core/poincare_view.coffee"));

  describe("visiblePolygonSize", function() {
    var cellPolygonSize, tiling;
    tiling = new RegularTiling(5, 4);
    cellPolygonSize = function(chain) {
      return visiblePolygonSize(tiling, tiling.repr(chain));
    };
    it("must be positive, nonzero", function() {
      assert(0 < cellPolygonSize(tiling.unity));
      assert(0 < cellPolygonSize(tiling.parse("a")));
      return assert(0 < cellPolygonSize(tiling.parse("b")));
    });
    it("must decrease when distance is increasing", function() {
      var size_0, size_b1;
      size_0 = cellPolygonSize(tiling.unity);
      size_b1 = cellPolygonSize(tiling.parse("b"));
      return assert(size_b1 < size_0);
    });
    return it("must not change only from rotation of the polygon", function() {
      var size_0, size_a1;
      size_0 = cellPolygonSize(tiling.unity);
      size_a1 = cellPolygonSize(tiling.parse("a"));
      return assert(Math.abs(size_a1 - size_0) < 1e-3);
    });
  });

}).call(this);
